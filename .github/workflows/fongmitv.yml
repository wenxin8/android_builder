name: fongmitv
on:
  schedule:
    - cron: '0 4,16 * * *' # 每天 UTC 时间的 4:00 和 16:00 执行任务，对应的是中国时间的 12:00 和 24:00
  push:
    paths: 
      - ".github/workflows/fongmitv.yml"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:    
        include:
          - url: "https://github.com/FongMi/TV"
            name: FongMiTV
    env:
      TZ: Asia/Shanghai
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.4.0
  
      - name: Setup Java JDK
        uses: actions/setup-java@v3.10.0
        with:
          distribution: 'temurin'
          java-version: '8'
      
      - name: Clone project
        run: |
          git clone --depth=1 "${{ matrix.url }}" project
          cd project
          git fetch origin
          git checkout release			
      - name: 获取时间
        run: | 
          cd project
          #lastcommit="$(TZ=UTC+8 git log -1 --pretty=format:%ci)"  #获取指定时区下的最新提交时间戳
          
          ##leanback_lastcommit=$( git log -1 --format="%cd" --date=iso-strict release/)
          leanback_lastcommit=$( git log -1 --pretty=format:%ci  release/)
          echo "Latest commit time of file_name is $leanback_lastcommit"
          #leanback_lastcommit=$(echo $leanback_lastcommit | sed 's/ [+-][0-9]\{4\}//g')  #时间戳字符串中的空格和加号后面的时区信息去掉      
          #echo "leanback_lastcommit:$leanback_lastcommit"
          #leanback_lastcommit=$(date --date="$leanback_lastcommit" +'%Y%m%d-%H%M')  #将该时间戳格式化为 yyyymmdd-hhmm 的形式
          testtime=$(date --date="$leanback_lastcommit" +'%Y%m%d-%H%M')
          echo "$leanback_lastcommit"
          leanback_lastcommit=$(echo $leanback_lastcommit | cut -d'+' -f1 | xargs -I{} date -d {} +'%Y%m%d-%H%M')
          echo "leanback_lastcommit=$leanback_lastcommit" >> $GITHUB_ENV
          echo "leanback_lastcommit:$leanback_lastcommit"
          
          TIMESTAMP=$(  date +'%Y%m%d-%H%M')
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "实时北京时间TIMESTAMP=$TIMESTAMP"
      - name: 更新版本名称
        if: ${{false}}
        run: |                                    
           sed -i "/versionName/s#[0-9a-zA-Z_\.\'\"-]\+\$#\'${{ matrix.name }}_${{env.lastcommit}}\'#" project/app/build.gradle
      - name: Build the app
        if: ${{false}}
        working-directory: ./project
        run: |
          if [ ! -f "gradlew" ]; then gradle wrapper; fi
          chmod +x gradlew
          ./gradlew assembleDebug --stacktrace      
    
      - name: 重命名，复制apk
        if: ${{true}}
        run: |
          mkdir -p ${{ github.workspace }}/upload/
          mv project/release/leanback-java.apk upload/${{ matrix.name }}_leanback-java_${{env.leanback_lastcommit}}.apk
          mv project/release/leanback-python.apk upload/${{ matrix.name }}_leanback-python_${{env.leanback_lastcommit}}.apk
          mv project/release/mobile-java.apk upload/${{ matrix.name }}_mobile-java_${{env.leanback_lastcommit}}.apk
          mv project/release/mobile-python.apk upload/${{ matrix.name }}_mobile-python_${{env.leanback_lastcommit}}.apk
          
          
      - name: upload webdav_Koofr        
        uses: bxb100/action-upload-webdav@v1
        with:
           webdav_address: https://app.koofr.net/dav/Koofr/github/FonMiTV
           webdav_username: ${{secrets.WEBDAV_USERNAME}}
           webdav_password: ${{secrets.WEBDAV_PASSWORD}}
           webdav_upload_path: "/"
           files: "./upload/*.apk"
      - name: upload webdav_OneDrive       
        uses: bxb100/action-upload-webdav@v1
        with:
           webdav_address: https://app.koofr.net/dav/OneDrive/github/FonMiTV
           webdav_username: ${{secrets.WEBDAV_USERNAME}}
           webdav_password: ${{secrets.WEBDAV_PASSWORD}}
           webdav_upload_path: "/"
           files: "./upload/*.apk"
      - name: Upload APK
        if: ${{false}}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: TVBoxdebug_${{ matrix.name }}_${{env.lastcommit}}_${{env.TIMESTAMP}}
          path: debug/*.apk
